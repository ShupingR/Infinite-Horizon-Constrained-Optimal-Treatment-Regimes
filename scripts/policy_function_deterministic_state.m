% deterministic polynomial policy function
function [action, actionphi_pos, actionphi_neg] = ...
    policy_function_deterministic_state(tau, pos_s, neg_s, ...
        prctile_state_pos, dist_state_pos, prctile_state_neg, dist_state_neg)
    % input : 
    % tau : policy index parameter 
    % sample, K, L
    % output:
    % action : action under the policy index
    % actionphi_pos: radial basis function corresponding to that action wrt positive reward
    % actionphi_neg: radial basis function corresponding to that action wrt negative reward
    % in_pol = [1, pos_s, pos_s^2, neg_s, ...
    %            neg_s^2, pos_s*neg_s]*tau;
    in_pol = [ 1, pos_s, pos_s^2, ...
                     neg_s, neg_s^2, ...
                     neg_s*pos_s ]*tau;
    action = (in_pol < 1)*1 + ...
                (in_pol >= 1 && in_pol < 2)*2 + ...
                (in_pol >= 2 && in_pol < 3)*3 + ...
                (in_pol >= 3 && in_pol < 4)*4 + ...
                (in_pol >= 4)*5;
    actionphi_pos = basis_fast(pos_s, action, prctile_state_pos, ...
                          dist_state_pos);
    actionphi_neg = basis_fast(neg_s, action, prctile_state_neg, ...
                          dist_state_neg);
  % disp(action);
end

